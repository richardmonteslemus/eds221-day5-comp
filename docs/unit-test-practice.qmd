---
title: "Unit Test Practice"
format: html
---

### Unit testing with the 'testthat' package 

First, install necessary packages 

```{r}
# install.packages("testthat")
# install.packages("devtools")
# install.packages("remotes")

rm(list = ls())
library(testthat)
library(devtools)
library(remotes)
```

Write a function to practice unit tests.

This function is going to find the mean value of each column, and then return the lowest and highest mean value calculated in that order. 

We would expect: 
- the output should be numeric 
- output should be a vector of length 2 
- the first value should be smaller than the second value 

```{r}
mean_range <- function(df){
  # return the mean values of each column
  col_means <- apply(X = df, MARGIN = 2, mean, na.rm = TRUE) 
  # find minimum and maximum values of each column
  col_mean_max <- max(col_means)
  col_mean_min <- min(col_means)
  
  # return min and max values in that order
  return(c(col_mean_min, col_mean_max))
}

mean_range(df = mtcars)
```

Write some unit tests.
```{r}
# test that the output is of length two 
expect_length(mean_range(df = mtcars), 2)

# test that first value is less than second value 

expect_true(mean_range(mtcars)[1] < mean_range(mtcars)[2])

```

Custom function example 
## Practice sourcing functions 
```{r}
# Source our food cart functions 
source(here::here("src", "food_cart_function.R"))

# Test running function 
name_cart(food = "Strawberry", animal = "Marmot")
```

Practice with an existing function 
```{r}
# Source cork oak function 
source(here::here("src", "cork_oak_growth.R"))

# Call function 
height_t2(3, 1, 5)
```

